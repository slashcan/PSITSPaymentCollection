

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Dbsys.AppData
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class DBSYSEntities : DbContext
{
    public DBSYSEntities()
        : base("name=DBSYSEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<Role> Role { get; set; }

    public DbSet<UserAccount> UserAccount { get; set; }

    public DbSet<UserInformation> UserInformation { get; set; }

    public DbSet<vw_all_user_role> vw_all_user_role { get; set; }

    public DbSet<Misc> Misc { get; set; }

    public DbSet<YearLevel> YearLevel { get; set; }

    public DbSet<Events> Events { get; set; }

    public DbSet<PaymentForEvent> PaymentForEvent { get; set; }

    public DbSet<PaymentForMisc> PaymentForMisc { get; set; }

    public DbSet<payment> payment { get; set; }

    public DbSet<vw_total_event_sales> vw_total_event_sales { get; set; }

    public DbSet<vw_total_misc_sales> vw_total_misc_sales { get; set; }

    public DbSet<vw_total_applicants_1styr> vw_total_applicants_1styr { get; set; }

    public DbSet<vw_total_applicants_2ndyr> vw_total_applicants_2ndyr { get; set; }

    public DbSet<vw_total_applicants_3rdyr> vw_total_applicants_3rdyr { get; set; }

    public DbSet<vw_total_applicants_4thyr> vw_total_applicants_4thyr { get; set; }


    public virtual int sp_CreateUser(string username, string password, Nullable<int> role, string status, Nullable<int> createdBy)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var roleParameter = role.HasValue ?
            new ObjectParameter("role", role) :
            new ObjectParameter("role", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("createdBy", createdBy) :
            new ObjectParameter("createdBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateUser", usernameParameter, passwordParameter, roleParameter, statusParameter, createdByParameter);
    }


    public virtual int sp_newUser(string username, string password, Nullable<int> role, string status, Nullable<int> createdBy)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var roleParameter = role.HasValue ?
            new ObjectParameter("role", role) :
            new ObjectParameter("role", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("createdBy", createdBy) :
            new ObjectParameter("createdBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_newUser", usernameParameter, passwordParameter, roleParameter, statusParameter, createdByParameter);
    }


    public virtual int InsertUserAccount(string username, string password, Nullable<int> role, string status, string createdBy)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var roleParameter = role.HasValue ?
            new ObjectParameter("role", role) :
            new ObjectParameter("role", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        var createdByParameter = createdBy != null ?
            new ObjectParameter("createdBy", createdBy) :
            new ObjectParameter("createdBy", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserAccount", usernameParameter, passwordParameter, roleParameter, statusParameter, createdByParameter);
    }


    public virtual int sp_InsertUserAccount(string username, string password, Nullable<int> role, string status, Nullable<int> createdBy)
    {

        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var roleParameter = role.HasValue ?
            new ObjectParameter("role", role) :
            new ObjectParameter("role", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("createdBy", createdBy) :
            new ObjectParameter("createdBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertUserAccount", usernameParameter, passwordParameter, roleParameter, statusParameter, createdByParameter);
    }


    public virtual int sp_UpdateUser(Nullable<int> userId, string username, string password, Nullable<int> role, string status)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(int));


        var usernameParameter = username != null ?
            new ObjectParameter("username", username) :
            new ObjectParameter("username", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        var roleParameter = role.HasValue ?
            new ObjectParameter("role", role) :
            new ObjectParameter("role", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("status", status) :
            new ObjectParameter("status", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUser", userIdParameter, usernameParameter, passwordParameter, roleParameter, statusParameter);
    }


    public virtual int sp_DeleteUserAccount(Nullable<int> userId)
    {

        var userIdParameter = userId.HasValue ?
            new ObjectParameter("userId", userId) :
            new ObjectParameter("userId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteUserAccount", userIdParameter);
    }


    public virtual int sp_UpdateEvent(Nullable<int> eventId, string eventName, Nullable<System.DateTime> eventDate, Nullable<int> eventPrice)
    {

        var eventIdParameter = eventId.HasValue ?
            new ObjectParameter("eventId", eventId) :
            new ObjectParameter("eventId", typeof(int));


        var eventNameParameter = eventName != null ?
            new ObjectParameter("eventName", eventName) :
            new ObjectParameter("eventName", typeof(string));


        var eventDateParameter = eventDate.HasValue ?
            new ObjectParameter("eventDate", eventDate) :
            new ObjectParameter("eventDate", typeof(System.DateTime));


        var eventPriceParameter = eventPrice.HasValue ?
            new ObjectParameter("eventPrice", eventPrice) :
            new ObjectParameter("eventPrice", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateEvent", eventIdParameter, eventNameParameter, eventDateParameter, eventPriceParameter);
    }


    public virtual int sp_UpdateMisc(Nullable<int> miscId, string miscName, Nullable<int> miscPrice)
    {

        var miscIdParameter = miscId.HasValue ?
            new ObjectParameter("miscId", miscId) :
            new ObjectParameter("miscId", typeof(int));


        var miscNameParameter = miscName != null ?
            new ObjectParameter("miscName", miscName) :
            new ObjectParameter("miscName", typeof(string));


        var miscPriceParameter = miscPrice.HasValue ?
            new ObjectParameter("miscPrice", miscPrice) :
            new ObjectParameter("miscPrice", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateMisc", miscIdParameter, miscNameParameter, miscPriceParameter);
    }


    public virtual int sp_DeleteEvent(Nullable<int> eventId)
    {

        var eventIdParameter = eventId.HasValue ?
            new ObjectParameter("eventId", eventId) :
            new ObjectParameter("eventId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteEvent", eventIdParameter);
    }


    public virtual int sp_DeleteMisc(Nullable<int> miscId)
    {

        var miscIdParameter = miscId.HasValue ?
            new ObjectParameter("miscId", miscId) :
            new ObjectParameter("miscId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteMisc", miscIdParameter);
    }


    public virtual ObjectResult<sp_EventFilter_Result> sp_EventFilter(string eventname)
    {

        var eventnameParameter = eventname != null ?
            new ObjectParameter("eventname", eventname) :
            new ObjectParameter("eventname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EventFilter_Result>("sp_EventFilter", eventnameParameter);
    }


    public virtual ObjectResult<sp_MiscFilter_Result> sp_MiscFilter(string miscname)
    {

        var miscnameParameter = miscname != null ?
            new ObjectParameter("miscname", miscname) :
            new ObjectParameter("miscname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MiscFilter_Result>("sp_MiscFilter", miscnameParameter);
    }

}

}

